package com.microsoft.schemas.ws._2008._06.identity.securitytokenservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.6
 * 2021-05-04T11:56:56.209+02:00
 * Generated source version: 3.3.6
 *
 */
@WebServiceClient(name = "SecurityTokenService",
                  wsdlLocation = "file:/C:/src/coding-samples/src/main/resources/wsdl/sts.wsdl",
                  targetNamespace = "http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice")
public class SecurityTokenService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice", "SecurityTokenService");
    public final static QName CertificateWSTrustBindingIWSTrust13Sync = new QName("http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice", "CertificateWSTrustBinding_IWSTrust13Sync");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/src/coding-samples/src/main/resources/wsdl/sts.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SecurityTokenService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/src/coding-samples/src/main/resources/wsdl/sts.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SecurityTokenService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SecurityTokenService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SecurityTokenService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SecurityTokenService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SecurityTokenService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SecurityTokenService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns IWSTrust13Sync
     */
    @WebEndpoint(name = "CertificateWSTrustBinding_IWSTrust13Sync")
    public IWSTrust13Sync getCertificateWSTrustBindingIWSTrust13Sync() {
        return super.getPort(CertificateWSTrustBindingIWSTrust13Sync, IWSTrust13Sync.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IWSTrust13Sync
     */
    @WebEndpoint(name = "CertificateWSTrustBinding_IWSTrust13Sync")
    public IWSTrust13Sync getCertificateWSTrustBindingIWSTrust13Sync(WebServiceFeature... features) {
        return super.getPort(CertificateWSTrustBindingIWSTrust13Sync, IWSTrust13Sync.class, features);
    }

}
